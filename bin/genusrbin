#!/bin/sh -e
SOURCES=""
CACHE=""
TARGET=""
WORKDIR=""
OUT=""
DEST=""
ARCH=""
while getopts "c:s:t:w:o:f:a:" opt ; do
  case $opt in
    c) CACHE="$OPTARG";;
    s) SOURCES="$OPTARG";;
    t) TARGET="$OPTARG";;
    w) WORKDIR="$OPTARG";;
    o) OUT="$OPTARG";;
    f) DEST="$OPTARG";;
    a) ARCH="$OPTARG";;
    *)
      echo "unknown arg $opt"
      exit 1
      ;;
  esac
done

_download_if_not() {
  if [ -e "$2" ]; then
    if file "$2" | grep -q "compressed data"; then
      return
    fi
  fi
  echo "downloading: $1"
  curl --silent -L "$1" > "$2"
}

[ -z "$DEST" ] && DEST="usrbin.img"
[ -z "$OUT" ] && echo "no output dir set" && exit 1
[ -z "$WORKDIR" ] && echo "no workdir set" && exit 1
[ -z "$TARGET" ] && echo "no target set" && exit 1
[ -z "$CACHE" ] && echo "cache not set" && exit 1
[ -z "$SOURCES" ] && echo "sources not set" && exit 1
[ -z "$ARCH" ] && echo "arch not set" && exit 1
[ ! -d "$CACHE" ] && echo "no $CACHE dir found" && exit 1
[ ! -d "$SOURCES" ] && echo "no $SOURCES dir found" && exit 1

PKGS_USR_OFFSET="usr/local"
export PKGS_BIN_DIR="bin"
export PKGS_LIB_DIR="lib"
export PKGS_BIN_OFFSET="$PKGS_USR_OFFSET/$PKGS_BIN_DIR"
export PKGS_LIB_OFFSET="$PKGS_USR_OFFSET/$PKGS_LIB_DIR"
export PKGS_BIN="$TARGET/$PKGS_BIN_OFFSET"
export PKGS_LIB="$TARGET/$PKGS_LIB_OFFSET"
export PKGS_SHARE="$TARGET/$PKGS_USR_OFFSET/share"
export PKGS_COMP="$PKGS_SHARE/bash-completion/completions/"
export PKGS_WD="$WORKDIR"
mkdir -p "$PKGS_BIN" "$PKGS_LIB" "$PKGS_WD" "$PKGS_COMP" "$OUT"

export PKGS_ARCH="$ARCH"
[ "$PKGS_ARCH" = "aarch64" ] && export PKGS_ALTARCH=arm64
export PKGS_LIBC=musl
export PKGS_OS=linux

export PATH="$PKGS_BIN:$PATH"
for SRC in "$SOURCES/"*.sh; do
  echo "processing: $SRC"
  source "$SRC"
done

(cd "$TARGET" && mksquashfs "$TARGET/$PKGS_USR_OFFSET" "$DEST")
